dnl Process this file with autoconf to produce a configure script.
AC_INIT(main.c)
AC_CONFIG_HEADER(config.h)

[ if [ -f configure ]; then ]
	AC_MSG_ERROR([Please run configure from the build directory (try ../AppRun --compile)])
	exit 1
fi

if test -z "$PKG_CONFIG"; then
  PKG_CONFIG=pkg-config
fi
AC_SUBST(PKG_CONFIG)

AC_MSG_CHECKING(that pkg-config runs)
if "$PKG_CONFIG" --version > /dev/null 2>&1 ; then
  AC_MSG_RESULT(yes)
else
  AC_MSG_RESULT(no)
  AC_MSG_ERROR([*** pkg-config missing ***

\'$PKG_CONFIG --version\' failed to run - make sure it is inside one of the
directories in your PATH environment variable!

pkg-config comes with the developement packages for GTK+-2.0, available at:

    http://www.gtk.org])
fi

AC_DEFUN(ROX_REQUIRE, [
AC_MSG_CHECKING(that $1 (version >= $2) is installed)
if "$PKG_CONFIG" --atleast-version=$2 $1 ; then
  AC_MSG_RESULT(yes)
else
  AC_MSG_RESULT(no)
  if "$PKG_CONFIG" --exists $1 ; then
    AC_MSG_ERROR(Current version is only `"$PKG_CONFIG" $1 --modversion`)
  else
    AC_MSG_ERROR(Package is not installed)
  fi
fi
])

ROX_REQUIRE(gtk+-2.0, 2.0.1)
ROX_REQUIRE(libxml-2.0, 2.0.0)
ROX_REQUIRE(dbus-1, 0.20)
ROX_REQUIRE(dbus-glib-1, 0.20)

dnl Checks for programs.
AC_PROG_CC
AC_PROG_MAKE_SET

# Compiler characteristics
AC_C_CONST
AC_C_INLINE

dnl Use -Wall, etc if possible
dnl Note: GTK uses func(), so can't use -Wstrict-prototypes 
[
if test "x$GCC" = "xyes"; then
  CFLAGS="$CFLAGS -Wall -Wmissing-prototypes"
]
  AC_MSG_CHECKING(for GCC version 4)
[ if $CC --version | grep "(GCC) 4" > /dev/null; then ]
    AC_MSG_RESULT(yes)
    [ CFLAGS="$CFLAGS -Wno-pointer-sign" ]
  else
    AC_MSG_RESULT(no)
  fi
fi

dnl Find the X libraries
AC_PATH_XTRA
if test x$no_x = xyes ; then
  AC_MSG_ERROR([X development libraries not found])
fi
LIBS="$LIBS $X_LIBS -lX11 -lXext $X_EXTRA_LIBS"
CFLAGS="$CFLAGS $X_CFLAGS"

dnl Extract version info from AppInfo.xml
AC_MSG_CHECKING(AppInfo version information)
[
VERSION=`sed -n 's/^.*<Version>\(@<:@.0-9@:>@*\).*<\/Version>.*$/\1/p' ../AppInfo.xml`
]
AC_DEFINE_UNQUOTED(VERSION, "$VERSION")
AC_MSG_RESULT($VERSION)

# Convert dbus version x.y or x.y.z into (x * 1000000 + y * 1000 + z).
AC_MSG_CHECKING(decimalised dbus version number)
ROX_DBUS_VERSION=`pkg-config --modversion dbus-1`
majver=`echo $ROX_DBUS_VERSION | sed 's/\..*//'`
minver=`echo $ROX_DBUS_VERSION | sed 's/^@<:@0-9@:>@*\.\(@<:@0-9@:>@*\)@<:@^0-9@:>@*.*/\1/'`
nanver=`echo $ROX_DBUS_VERSION | sed 's/^@<:@0-9@:>@*\.@<:@0-9@:>@*\.*\(@<:@0-9@:>@*\)@<:@^0-9@:>@*.*/\1/'`
if test x$nanver = x
then
    nanver=0
fi
let ROX_DBUS_VERSION=${majver}*1000000+${minver}*1000+${nanver}
AC_MSG_RESULT($ROX_DBUS_VERSION)
AC_DEFINE_UNQUOTED(ROX_DBUS_VERSION, $ROX_DBUS_VERSION)

dnl Checks for header files.
AC_PATH_X
AC_HEADER_STDC
AC_CHECK_HEADERS(locale.h apsymbols.h)

dnl Checks for typedefs, structures, and compiler characteristics.

dnl Checks for library functions.
AC_CHECK_FUNCS(unsetenv getopt_long)

AC_OUTPUT(Makefile)
